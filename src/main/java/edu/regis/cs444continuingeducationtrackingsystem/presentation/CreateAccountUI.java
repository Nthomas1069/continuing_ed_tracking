/*
 * The Continuing Education Tracking System, "CETS," is a professional education
 * tracking application for state and federally licensed individuals who have to
 * complete and document their required continuing education credits ("CEU's")
 * in order to be eligible for periodic license renewal. The application allows
 * users to create their own account and document education courses with an
 * automated sum of hours completed for easy reference. If required by an audit,
 * or to fulfill workplace requirements, the app also support a completed
 * education summary report in a text file.
 */
package edu.regis.cs444continuingeducationtrackingsystem.presentation;

import cs444continuingeducationtrackingsystem.domain.*;
import cs444continuingeducationtrackingsystem.service.*;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 * User Interface for creation of a new account, including Login credentials and
 * account profile information for MainUI and report creation.
 *
 * @author Nathan Thomas
 * @version 1.0
 */
public class CreateAccountUI extends javax.swing.JFrame {

   /**
    * Creates new form CreateAccountUI
    */
   public CreateAccountUI() {
      initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      createAccountLbl = new javax.swing.JLabel();
      newUsernameLbl = new javax.swing.JLabel();
      newPasswordLbl = new javax.swing.JLabel();
      newUsernameFld = new javax.swing.JTextField();
      availableBtn = new javax.swing.JButton();
      jSeparator1 = new javax.swing.JSeparator();
      profileLbl = new javax.swing.JLabel();
      availableAnswerLbl = new javax.swing.JLabel();
      firstNameLbl = new javax.swing.JLabel();
      firstNameFld = new javax.swing.JTextField();
      lastNameLbl = new javax.swing.JLabel();
      lastNameFld = new javax.swing.JTextField();
      licenseTitleLbl = new javax.swing.JLabel();
      licenseTitleFld = new javax.swing.JTextField();
      licenseNumberLbl = new javax.swing.JLabel();
      licenseNumberFld = new javax.swing.JTextField();
      dateIssuedLbl = new javax.swing.JLabel();
      numHoursNeededLbl = new javax.swing.JLabel();
      numHoursNeededFld = new javax.swing.JTextField();
      expirationDateLbl = new javax.swing.JLabel();
      stateLbl = new javax.swing.JLabel();
      createAccountDoneBtn = new javax.swing.JButton();
      createAccountCancelBtn = new javax.swing.JButton();
      passwordReqLbl = new javax.swing.JLabel();
      confirmPwdLbl = new javax.swing.JLabel();
      confirmPwdFld = new javax.swing.JPasswordField();
      newPasswordFld = new javax.swing.JPasswordField();
      commonPasswordWarningLbl = new javax.swing.JLabel();
      stateBox = new javax.swing.JComboBox<>();
      issueMonthBox = new javax.swing.JComboBox<>();
      issueDayBox = new javax.swing.JComboBox<>();
      issueYearBox = new javax.swing.JComboBox<>();
      expireMonthBox = new javax.swing.JComboBox<>();
      expireDayBox = new javax.swing.JComboBox<>();
      expireYearBox = new javax.swing.JComboBox<>();
      licenseNumberWarningLbl = new javax.swing.JLabel();
      numHoursNeededWarningLbl = new javax.swing.JLabel();
      datesWarningLbl = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("CETS");
      setBackground(new java.awt.Color(204, 204, 204));
      setLocation(new java.awt.Point(475, 200));
      setMaximumSize(new java.awt.Dimension(600, 620));
      setMinimumSize(new java.awt.Dimension(600, 620));
      setPreferredSize(new java.awt.Dimension(600, 620));
      setResizable(false);

      createAccountLbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
      createAccountLbl.setText("Create Account");

      newUsernameLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      newUsernameLbl.setText("New Username");

      newPasswordLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      newPasswordLbl.setText("New Password");

      availableBtn.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
      availableBtn.setText("Available?");
      availableBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            availableBtnActionPerformed(evt);
         }
      });

      profileLbl.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
      profileLbl.setText("Profile Information");

      availableAnswerLbl.setBackground(new java.awt.Color(204, 204, 204));
      availableAnswerLbl.setForeground(new java.awt.Color(51, 204, 0));

      firstNameLbl.setText("First Name");

      lastNameLbl.setText("Last Name");

      licenseTitleLbl.setText("License Title");

      licenseNumberLbl.setText("License #");

      dateIssuedLbl.setText("Date of Issue");

      numHoursNeededLbl.setText("# Hours Needed");

      numHoursNeededFld.setToolTipText("e.g. 50");

      expirationDateLbl.setText("Expires On");

      stateLbl.setText("State");

      createAccountDoneBtn.setText("Done");
      createAccountDoneBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createAccountDoneBtnActionPerformed(evt);
         }
      });

      createAccountCancelBtn.setText("Cancel");
      createAccountCancelBtn.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            createAccountCancelBtnActionPerformed(evt);
         }
      });

      passwordReqLbl.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
      passwordReqLbl.setText("At Least 8 Characters");

      confirmPwdLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
      confirmPwdLbl.setText("Confirm Password");

      commonPasswordWarningLbl.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
      commonPasswordWarningLbl.setForeground(new java.awt.Color(255, 0, 51));

      stateBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AL", "AK", "AR", "AZ", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "ME", "MD", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "USA", "AS", "FM", "GU", "MH", "MP", "PW", "PR", "VI", " ", " " }));
      stateBox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            stateBoxActionPerformed(evt);
         }
      });

      issueMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" }));

      issueDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

      issueYearBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970" }));

      expireMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC" }));

      expireDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

      expireYearBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039", "2040" }));

      licenseNumberWarningLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
      licenseNumberWarningLbl.setForeground(new java.awt.Color(255, 0, 51));
      licenseNumberWarningLbl.setText(" ");
      licenseNumberWarningLbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);

      numHoursNeededWarningLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
      numHoursNeededWarningLbl.setForeground(new java.awt.Color(255, 0, 51));
      numHoursNeededWarningLbl.setText(" ");
      numHoursNeededWarningLbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);

      datesWarningLbl.setFont(new java.awt.Font("Dialog", 2, 10)); // NOI18N
      datesWarningLbl.setForeground(new java.awt.Color(255, 0, 51));
      datesWarningLbl.setText(" ");

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(layout.createSequentialGroup()
            .addGap(23, 23, 23)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addComponent(jSeparator1)
                  .addContainerGap())
               .addGroup(layout.createSequentialGroup()
                  .addComponent(createAccountLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addGap(331, 331, 331))
               .addGroup(layout.createSequentialGroup()
                  .addGap(16, 16, 16)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(layout.createSequentialGroup()
                        .addComponent(profileLbl)
                        .addGap(0, 402, Short.MAX_VALUE))
                     .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(licenseTitleLbl)
                           .addComponent(licenseNumberLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(firstNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(dateIssuedLbl)
                           .addComponent(expirationDateLbl))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(layout.createSequentialGroup()
                              .addComponent(expireMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(expireDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addComponent(expireYearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                           .addGroup(layout.createSequentialGroup()
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                 .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                       .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                             .addComponent(licenseNumberWarningLbl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                             .addComponent(licenseNumberFld, javax.swing.GroupLayout.Alignment.LEADING)
                                             .addComponent(licenseTitleFld, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                                          .addGroup(layout.createSequentialGroup()
                                             .addComponent(issueMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                             .addComponent(issueDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                             .addComponent(issueYearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                       .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                          .addGroup(layout.createSequentialGroup()
                                             .addGap(7, 7, 7)
                                             .addComponent(datesWarningLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                          .addGroup(layout.createSequentialGroup()
                                             .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                             .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(numHoursNeededWarningLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createSequentialGroup()
                                                   .addComponent(numHoursNeededLbl)
                                                   .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                   .addComponent(numHoursNeededFld, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                       .addGap(208, 208, 208)
                                       .addComponent(stateLbl)
                                       .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                       .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                 .addGroup(layout.createSequentialGroup()
                                    .addComponent(firstNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(35, 35, 35)
                                    .addComponent(lastNameLbl)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(lastNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                              .addGap(0, 0, 0))
                           .addGroup(layout.createSequentialGroup()
                              .addGap(13, 13, 13)
                              .addComponent(createAccountDoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(createAccountCancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(136, 136, 136))))))
               .addGroup(layout.createSequentialGroup()
                  .addGap(17, 17, 17)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addComponent(newPasswordLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                     .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(newUsernameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addComponent(confirmPwdLbl))
                        .addGap(0, 40, Short.MAX_VALUE)))
                  .addGap(2, 2, 2)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                     .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(commonPasswordWarningLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(49, 49, 49))
                     .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addComponent(newUsernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                           .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                              .addComponent(newPasswordFld)
                              .addComponent(confirmPwdFld, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(layout.createSequentialGroup()
                              .addComponent(passwordReqLbl)
                              .addGap(0, 0, Short.MAX_VALUE))
                           .addGroup(layout.createSequentialGroup()
                              .addComponent(availableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(availableAnswerLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(0, 34, Short.MAX_VALUE))))))))
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(createAccountLbl)
            .addGap(24, 24, 24)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(availableAnswerLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(newUsernameLbl)
                  .addComponent(newUsernameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(availableBtn)))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(newPasswordLbl)
               .addComponent(passwordReqLbl)
               .addComponent(newPasswordFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(confirmPwdLbl)
               .addComponent(confirmPwdFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(7, 7, 7)
            .addComponent(commonPasswordWarningLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(profileLbl)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(firstNameLbl)
               .addComponent(firstNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(lastNameLbl)
               .addComponent(lastNameFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(licenseTitleLbl)
               .addComponent(licenseTitleFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(stateLbl)
               .addComponent(stateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(licenseNumberLbl)
               .addComponent(licenseNumberFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(numHoursNeededLbl)
               .addComponent(numHoursNeededFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(licenseNumberWarningLbl)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(dateIssuedLbl)
                     .addComponent(issueMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(issueDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(issueYearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(18, 18, 18)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(expirationDateLbl)
                     .addComponent(expireMonthBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(expireDayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                     .addComponent(expireYearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGap(35, 35, 35)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                     .addComponent(createAccountDoneBtn)
                     .addComponent(createAccountCancelBtn)))
               .addGroup(layout.createSequentialGroup()
                  .addGap(3, 3, 3)
                  .addComponent(numHoursNeededWarningLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addGap(37, 37, 37)
                  .addComponent(datesWarningLbl)))
            .addGap(113, 113, 113))
      );

      pack();
   }// </editor-fold>//GEN-END:initComponents

   private void createAccountCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountCancelBtnActionPerformed
      this.setVisible(false);
      LoginUI loginUI = new LoginUI();
      loginUI.setVisible(true);
   }//GEN-LAST:event_createAccountCancelBtnActionPerformed

   private void createAccountDoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountDoneBtnActionPerformed
      int currentYear = LocalDate.now().getYear();
      AccountSvcCacheImpl impl = AccountSvcCacheImpl.getInstance();
      Login login = new Login();
      login.setUsername(newUsernameFld.getText());
      login.setPassword(newPasswordFld.getText());
      commonPasswordWarningLbl.setText("");

      if (!impl.usernameIsAvailable(newUsernameFld.getText())) {
         JOptionPane.showMessageDialog(this, "This Username Already Exists!",
                 "Try Again", JOptionPane.ERROR_MESSAGE);
         newUsernameFld.setText("");
         login.setUsername("");
      }

      if (!login.validate()) {
         JOptionPane.showMessageDialog(this, "Must provide valid username and "
                 + "password.", "Error", JOptionPane.ERROR_MESSAGE);
         if (login.checkCommonality()) {
            commonPasswordWarningLbl.setText("This password is very common and "
                    + "easily hacked!");
         } else if (login.getPassword().length() < 8) {
            commonPasswordWarningLbl.setText("Password must have at least 8 "
                    + "characters");
         } else if (!newPasswordFld.getText().equals(confirmPwdFld.getText())) {
            commonPasswordWarningLbl.setText("Password Fields Must Match");
         } else if (newPasswordFld.getText().equals(newUsernameFld.getText())) {
            commonPasswordWarningLbl.setText("Your password cannot be your "
                    + "username");
         }
         return;
      }

      if (!newPasswordFld.getText().equals(confirmPwdFld.getText())) {
         JOptionPane.showMessageDialog(this, "Both Password Fields Must Match",
                 "Error", JOptionPane.ERROR_MESSAGE);
         login.setPassword("");
         newPasswordFld.setText("");
         confirmPwdFld.setText("");
         return;
      }

      Account account = new Account();
      account.setFirstName(firstNameFld.getText());
      account.setLastName(lastNameFld.getText());
      account.setLicenseTitle(licenseTitleFld.getText());
      account.setLicenseNumber(licenseNumberFld.getText());
      account.setLicenseState((String) stateBox.getSelectedItem());
      account.setIssuedDate(issueMonthBox.getSelectedItem() + " "
              + issueDayBox.getSelectedItem() + ", "
              + issueYearBox.getSelectedItem());
      account.setExpirationDate(expireMonthBox.getSelectedItem() + " "
              + expireDayBox.getSelectedItem() + ", "
              + expireYearBox.getSelectedItem());
      account.setHoursNeeded(numHoursNeededFld.getText());
      account.setLogin(login);
      boolean isValid = account.validate();

      if (!isValid) {
         JOptionPane.showMessageDialog(this, "You must complete all fields "
                 + "correctly",
                 "Error", JOptionPane.ERROR_MESSAGE);
         try {
            Integer.parseInt(numHoursNeededFld.getText());
            numHoursNeededWarningLbl.setText("");
         } catch (NumberFormatException e) {
            numHoursNeededWarningLbl.setText("Must be a whole number greater "
                    + "than zero");
         }
         try {
            int testInt = Integer.valueOf(numHoursNeededFld.getText());
            if (testInt <= 0) {
               numHoursNeededWarningLbl.setText("Must be a whole number greater "
                       + "than zero");
            }
         } catch (NumberFormatException e) {
            numHoursNeededWarningLbl.setText("Must be a whole number greater "
                    + "than zero");
         }
         try {
            Long.parseLong(licenseNumberFld.getText());
            licenseNumberWarningLbl.setText("");
         } catch (NumberFormatException e) {
            licenseNumberWarningLbl.setText("License # must be numbers only");
         }
         if (issueDayBox.getSelectedItem().equals(expireDayBox.getSelectedItem())
                 && issueMonthBox.getSelectedItem().equals(expireMonthBox.getSelectedItem())
                 && issueYearBox.getSelectedItem().equals(expireYearBox.getSelectedItem())) {
            datesWarningLbl.setText("Issue and Expiration Dates Cannot Be the Same");
         } else if (Integer.parseInt((String) expireYearBox.getSelectedItem()) < currentYear) {
            datesWarningLbl.setText("Expiration Date Must Be A Future Date");
         } else if (Integer.parseInt((String) issueYearBox.getSelectedItem()) > currentYear) {
            datesWarningLbl.setText("Issue Date Cannot Be A Future Date");
         } else if (expireMonthBox.getSelectedItem().equals("FEB")
                 && (int) expireDayBox.getSelectedItem() > 29) {
            datesWarningLbl.setText("Invalid Date: FEB has less than 30 days");
         } else {
            datesWarningLbl.setText("");
         }
         return;
      } else {
         impl.create(account);
         JOptionPane.showMessageDialog(this, "Account Creation Successful!",
                 "Account Created", JOptionPane.INFORMATION_MESSAGE);
         this.setVisible(false);
         LoginUI loginUI = new LoginUI();
         loginUI.setVisible(true);
      }
   }//GEN-LAST:event_createAccountDoneBtnActionPerformed

   private void availableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableBtnActionPerformed
      AccountSvcCacheImpl impl = AccountSvcCacheImpl.getInstance();

      if (!impl.usernameIsAvailable(newUsernameFld.getText())) {
         JOptionPane.showMessageDialog(this, "This Username Already Exists!",
                 "Try Again", JOptionPane.ERROR_MESSAGE);
         newUsernameFld.setText("");
      } else if (newUsernameFld.getText().equals("")) {
         JOptionPane.showMessageDialog(this, "Username Cannot Be Empty!!",
                 "Try Again", JOptionPane.ERROR_MESSAGE);
         newUsernameFld.setText("");
      } else {
         JOptionPane.showMessageDialog(this, "This Username Is Available!",
                 "Available", JOptionPane.INFORMATION_MESSAGE);
      }
   }//GEN-LAST:event_availableBtnActionPerformed

   private void stateBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateBoxActionPerformed

   }//GEN-LAST:event_stateBoxActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(CreateAccountUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(CreateAccountUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(CreateAccountUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(CreateAccountUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
            new CreateAccountUI().setVisible(true);
         }
      });
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel availableAnswerLbl;
   private javax.swing.JButton availableBtn;
   private javax.swing.JLabel commonPasswordWarningLbl;
   private javax.swing.JPasswordField confirmPwdFld;
   private javax.swing.JLabel confirmPwdLbl;
   private javax.swing.JButton createAccountCancelBtn;
   private javax.swing.JButton createAccountDoneBtn;
   private javax.swing.JLabel createAccountLbl;
   private javax.swing.JLabel dateIssuedLbl;
   private javax.swing.JLabel datesWarningLbl;
   private javax.swing.JLabel expirationDateLbl;
   private javax.swing.JComboBox<String> expireDayBox;
   private javax.swing.JComboBox<String> expireMonthBox;
   private javax.swing.JComboBox<String> expireYearBox;
   private javax.swing.JTextField firstNameFld;
   private javax.swing.JLabel firstNameLbl;
   private javax.swing.JComboBox<String> issueDayBox;
   private javax.swing.JComboBox<String> issueMonthBox;
   private javax.swing.JComboBox<String> issueYearBox;
   private javax.swing.JSeparator jSeparator1;
   private javax.swing.JTextField lastNameFld;
   private javax.swing.JLabel lastNameLbl;
   private javax.swing.JTextField licenseNumberFld;
   private javax.swing.JLabel licenseNumberLbl;
   private javax.swing.JLabel licenseNumberWarningLbl;
   private javax.swing.JTextField licenseTitleFld;
   private javax.swing.JLabel licenseTitleLbl;
   private javax.swing.JPasswordField newPasswordFld;
   private javax.swing.JLabel newPasswordLbl;
   private javax.swing.JTextField newUsernameFld;
   private javax.swing.JLabel newUsernameLbl;
   private javax.swing.JTextField numHoursNeededFld;
   private javax.swing.JLabel numHoursNeededLbl;
   private javax.swing.JLabel numHoursNeededWarningLbl;
   private javax.swing.JLabel passwordReqLbl;
   private javax.swing.JLabel profileLbl;
   private javax.swing.JComboBox<String> stateBox;
   private javax.swing.JLabel stateLbl;
   // End of variables declaration//GEN-END:variables
}
